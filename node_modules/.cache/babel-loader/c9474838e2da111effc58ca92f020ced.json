{"ast":null,"code":"const transformSearch = resp => {\n  try {\n    var _data$data;\n\n    const {\n      data = {}\n    } = resp;\n    data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.forEach(item => {\n      var _date$toISOString, _data$includes, _data$includes$users, _user;\n\n      const date = new Date(item === null || item === void 0 ? void 0 : item.created_at);\n      item.date = date === null || date === void 0 ? void 0 : (_date$toISOString = date.toISOString()) === null || _date$toISOString === void 0 ? void 0 : _date$toISOString.substring(0, 10);\n      let user = {};\n      user = data === null || data === void 0 ? void 0 : (_data$includes = data.includes) === null || _data$includes === void 0 ? void 0 : (_data$includes$users = _data$includes.users) === null || _data$includes$users === void 0 ? void 0 : _data$includes$users.filter(data => {\n        return (data === null || data === void 0 ? void 0 : data.id) === (item === null || item === void 0 ? void 0 : item.author_id);\n      });\n      item.user = (_user = user) === null || _user === void 0 ? void 0 : _user[0];\n    });\n    return resp;\n  } catch (e) {}\n};\n\nexport default transformSearch;","map":{"version":3,"sources":["/Users/rishi.arya/Documents/planview-twitter/src/transform/index.js"],"names":["transformSearch","resp","data","forEach","item","date","Date","created_at","toISOString","substring","user","includes","users","filter","id","author_id","e"],"mappings":"AAAA,MAAMA,eAAe,GAAIC,IAAD,IAAS;AACjC,MAAG;AAAA;;AACD,UAAM;AAACC,MAAAA,IAAI,GAAC;AAAN,QAAYD,IAAlB;AACAC,IAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,0BAAAA,IAAI,CAAEA,IAAN,0DAAYC,OAAZ,CAAqBC,IAAD,IAAQ;AAAA;;AAC1B,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAT,aAASA,IAAT,uBAASA,IAAI,CAAEG,UAAf,CAAb;AACAH,MAAAA,IAAI,CAACC,IAAL,GAAYA,IAAZ,aAAYA,IAAZ,4CAAYA,IAAI,CAAEG,WAAN,EAAZ,sDAAY,kBAAqBC,SAArB,CAA+B,CAA/B,EAAkC,EAAlC,CAAZ;AACA,UAAIC,IAAI,GAAG,EAAX;AACAA,MAAAA,IAAI,GAAGR,IAAH,aAAGA,IAAH,yCAAGA,IAAI,CAAES,QAAT,2EAAG,eAAgBC,KAAnB,yDAAG,qBAAuBC,MAAvB,CAA+BX,IAAD,IAAQ;AACrC,eAAS,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEY,EAAN,OAAaV,IAAb,aAAaA,IAAb,uBAAaA,IAAI,CAAEW,SAAnB,CAAT;AACL,OAFI,CAAP;AAGAX,MAAAA,IAAI,CAACM,IAAL,YAAYA,IAAZ,0CAAY,MAAO,CAAP,CAAZ;AACD,KARD;AAUA,WAAOT,IAAP;AACD,GAbD,CAaC,OAAMe,CAAN,EAAQ,CAER;AACA,CAjBD;;AAmBA,eAAehB,eAAf","sourcesContent":["const transformSearch = (resp) =>{\ntry{  \n  const {data={}} = resp;\n  data?.data?.forEach((item)=>{\n    const date = new Date(item?.created_at);\n    item.date = date?.toISOString()?.substring(0, 10);\n    let user = {}\n    user = data?.includes?.users?.filter((data)=>{\n            return ( data?.id === item?.author_id)\n      });\n    item.user = user?.[0];  \n  })\n\n  return resp;\n}catch(e){\n\n}\n}\n\nexport default transformSearch;"]},"metadata":{},"sourceType":"module"}