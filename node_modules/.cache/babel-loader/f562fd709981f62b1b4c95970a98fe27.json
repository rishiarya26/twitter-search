{"ast":null,"code":"import axios from \"axios\";\nimport { TWITTER } from \"../api-base\";\nimport transformSearch from \"../transform\";\nconst token = 'AAAAAAAAAAAAAAAAAAAAAISfZQEAAAAAubGaQz3VSOy6Xu8ctCdgZuPoxtA%3DuQdfsXG80hlNVuw33x6lVDpl8itp9Z8LSaw9ye9elxrsNYVOzQ';\nexport const getSearchResults = async function (query) {\n  let nextToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  try {\n    let url;\n    url = nextToken ? `${TWITTER}/2/tweets/search/recent?query=${query}&max_results=10&tweet.fields=created_at,text,author_id,geo,lang,public_metrics&user.fields=created_at,name,username,profile_image_url,location,public_metrics&expansions=author_id&next_token=${nextToken}` : `${TWITTER}/2/tweets/search/recent?query=${query}&max_results=10&tweet.fields=created_at,text,author_id,geo,lang,public_metrics&user.fields=created_at,name,username,profile_image_url,location,public_metrics&expansions=author_id`;\n    const response = await axios.get(url, {\n      headers: {\n        \"Authorization\": `bearer ${token}`\n      }\n    });\n    const transformedResponse = transformSearch(response) || response;\n    return transformedResponse;\n  } catch (e) {\n    console.log('error in search api', e);\n  }\n};","map":{"version":3,"sources":["/Users/rishi.arya/Documents/planview-twitter/src/sources/index.js"],"names":["axios","TWITTER","transformSearch","token","getSearchResults","query","nextToken","url","response","get","headers","transformedResponse","e","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,MAAMC,KAAK,GAAG,kHAAd;AAEA,OAAO,MAAMC,gBAAgB,GAAG,gBAAOC,KAAP,EAAiC;AAAA,MAAnBC,SAAmB,uEAAT,IAAS;;AAC9D,MAAI;AACF,QAAIC,GAAJ;AACAA,IAAAA,GAAG,GAAGD,SAAS,GAAI,GAAEL,OAAQ,iCAAgCI,KAAM,iMAAgMC,SAAU,EAA9P,GACd,GAAEL,OAAQ,iCAAgCI,KAAM,oLADjD;AAEC,UAAMG,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CACvBF,GADuB,EAEvB;AAAEG,MAAAA,OAAO,EACP;AACE,yBAAkB,UAASP,KAAM;AADnC;AADF,KAFuB,CAAvB;AAQF,UAAMQ,mBAAmB,GAAGT,eAAe,CAACM,QAAD,CAAf,IAA6BA,QAAzD;AACA,WAAOG,mBAAP;AACA,GAdD,CAcC,OAAMC,CAAN,EAAQ;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,CAAlC;AACH;AACD,CAlBI","sourcesContent":["import axios from \"axios\";\nimport { TWITTER } from \"../api-base\";\nimport transformSearch from \"../transform\";\n\nconst token = 'AAAAAAAAAAAAAAAAAAAAAISfZQEAAAAAubGaQz3VSOy6Xu8ctCdgZuPoxtA%3DuQdfsXG80hlNVuw33x6lVDpl8itp9Z8LSaw9ye9elxrsNYVOzQ'\n\nexport const getSearchResults = async (query, nextToken=null) => {\n   try { \n     let url;\n     url = nextToken ? `${TWITTER}/2/tweets/search/recent?query=${query}&max_results=10&tweet.fields=created_at,text,author_id,geo,lang,public_metrics&user.fields=created_at,name,username,profile_image_url,location,public_metrics&expansions=author_id&next_token=${nextToken}`:\n     `${TWITTER}/2/tweets/search/recent?query=${query}&max_results=10&tweet.fields=created_at,text,author_id,geo,lang,public_metrics&user.fields=created_at,name,username,profile_image_url,location,public_metrics&expansions=author_id`\n      const response = await axios.get(\n      url,\n      { headers: \n        { \n          \"Authorization\": `bearer ${token}`\n        }\n      });\n  \n    const transformedResponse = transformSearch(response) || response;\n    return transformedResponse;\n   }catch(e){\n       console.log('error in search api',e)\n   }\n  };\n\n "]},"metadata":{},"sourceType":"module"}