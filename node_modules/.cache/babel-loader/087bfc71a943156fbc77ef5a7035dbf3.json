{"ast":null,"code":"export const numberFormatter = num => {\n  let number = typeof num === \"number\" ? num : typeof num === \"string\" ? Number(num) : null;\n  if (number === null) return null;\n  let formattedNumber = Math.abs(number) > 999 ? Math.sign(number) * (Math.abs(number) / 1000).toFixed(1) + 'k' : Math.sign(number) * Math.abs(number);\n  return formattedNumber;\n};","map":{"version":3,"sources":["/Users/rishi.arya/Documents/planview-twitter/src/utils/number-formatter.js"],"names":["numberFormatter","num","number","Number","formattedNumber","Math","abs","sign","toFixed"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAIC,GAAD,IAAS;AACpC,MAAIC,MAAM,GAAI,OAAOD,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgC,OAAOA,GAAP,KAAe,QAAf,GAA0BE,MAAM,CAACF,GAAD,CAAhC,GAAwC,IAAtF;AACA,MAAIC,MAAM,KAAK,IAAf,EAAqB,OAAO,IAAP;AACrB,MAAIE,eAAe,GAAGC,IAAI,CAACC,GAAL,CAASJ,MAAT,IAAmB,GAAnB,GAA0BG,IAAI,CAACE,IAAL,CAAUL,MAAV,IAAmB,CAACG,IAAI,CAACC,GAAL,CAASJ,MAAT,IAAiB,IAAlB,EAAwBM,OAAxB,CAAgC,CAAhC,CAAnB,GAAyD,GAAnF,GAA0FH,IAAI,CAACE,IAAL,CAAUL,MAAV,IAAkBG,IAAI,CAACC,GAAL,CAASJ,MAAT,CAAlI;AACC,SAAOE,eAAP;AACH,CALK","sourcesContent":["export const numberFormatter = (num) => {\n    let number =  typeof num === \"number\" ? num : typeof num === \"string\" ? Number(num) : null;\n    if (number === null) return null;\n    let formattedNumber = Math.abs(number) > 999 ? (Math.sign(number)*((Math.abs(number)/1000).toFixed(1)) + 'k') : Math.sign(number)*Math.abs(number)\n     return formattedNumber;\n }"]},"metadata":{},"sourceType":"module"}