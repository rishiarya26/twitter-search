[{"/Users/rishi.arya/Documents/planview-twitter/src/index.js":"1","/Users/rishi.arya/Documents/planview-twitter/src/App.js":"2","/Users/rishi.arya/Documents/planview-twitter/src/reportWebVitals.js":"3","/Users/rishi.arya/Documents/planview-twitter/src/components/dashboard/index.js":"4","/Users/rishi.arya/Documents/planview-twitter/src/utils/storage.js":"5","/Users/rishi.arya/Documents/planview-twitter/src/sources/index.js":"6","/Users/rishi.arya/Documents/planview-twitter/src/components/favourite/index.js":"7","/Users/rishi.arya/Documents/planview-twitter/src/components/card/index.js":"8","/Users/rishi.arya/Documents/planview-twitter/src/components/search/index.js":"9","/Users/rishi.arya/Documents/planview-twitter/src/components/commons/tab/index.js":"10","/Users/rishi.arya/Documents/planview-twitter/src/api-base.js":"11","/Users/rishi.arya/Documents/planview-twitter/src/components/card/details.js":"12","/Users/rishi.arya/Documents/planview-twitter/src/components/card/action-bar.js":"13","/Users/rishi.arya/Documents/planview-twitter/src/components/card/user-info.js":"14","/Users/rishi.arya/Documents/planview-twitter/src/transform/index.js":"15","/Users/rishi.arya/Documents/planview-twitter/src/utils/number-formatter.js":"16","/Users/rishi.arya/Documents/planview-twitter/src/components/commons/like/index.js":"17"},{"size":530,"mtime":1645194362959,"results":"18","hashOfConfig":"19"},{"size":284,"mtime":1645194896063,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1645180219695,"results":"21","hashOfConfig":"19"},{"size":3897,"mtime":1645383586718,"results":"22","hashOfConfig":"19"},{"size":681,"mtime":1645356691044,"results":"23","hashOfConfig":"19"},{"size":1164,"mtime":1645376031546,"results":"24","hashOfConfig":"19"},{"size":847,"mtime":1645382278733,"results":"25","hashOfConfig":"19"},{"size":2208,"mtime":1645382079261,"results":"26","hashOfConfig":"19"},{"size":849,"mtime":1645378683067,"results":"27","hashOfConfig":"19"},{"size":646,"mtime":1645379057419,"results":"28","hashOfConfig":"19"},{"size":48,"mtime":1645208524958,"results":"29","hashOfConfig":"19"},{"size":1161,"mtime":1645351041680,"results":"30","hashOfConfig":"19"},{"size":1480,"mtime":1645382483174,"results":"31","hashOfConfig":"19"},{"size":676,"mtime":1645378837074,"results":"32","hashOfConfig":"19"},{"size":522,"mtime":1645383087364,"results":"33","hashOfConfig":"19"},{"size":358,"mtime":1645337315474,"results":"34","hashOfConfig":"19"},{"size":1328,"mtime":1645347835705,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ygn7fw",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rishi.arya/Documents/planview-twitter/src/index.js",[],[],"/Users/rishi.arya/Documents/planview-twitter/src/App.js",[],[],"/Users/rishi.arya/Documents/planview-twitter/src/reportWebVitals.js",[],[],"/Users/rishi.arya/Documents/planview-twitter/src/components/dashboard/index.js",["90"],[],"import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { getSearchResults } from \"../../sources\";\nimport { localStorage } from \"../../utils/storage\";\nimport Card from \"../card\";\nimport Tabs from \"../commons/tab\";\nimport Favourite from \"../favourite\";\nimport Search from \"../search\";\n\nconst Dashboard = ()=>{\nconst [items, setItems] = useState([]);\nconst [favourites, setFavourites] = useState([]);\nconst [selectedTabIndex, setSelectedTabIndex] = useState(0);\nconst [loading, setLoading] = useState(false);\nconst [nextToken, setNextToken] = useState(null);\nconst [query, setQuery] = useState('');\nconst [hasMore, setHasMore] = useState(true);\nconst [error, setError] = useState(false)\n\nconst observer = useRef();\n\nconst lastItemInView = useCallback((node)=>{\n  if(loading) return;\n  observer.current = new IntersectionObserver(enteries =>{\n       if(enteries[0]?.isIntersecting && hasMore){\n         addItems();\n       }\n  });\n  if(node) observer?.current?.observe(node);\n},[loading, hasMore])\n\nconst getItems = async() =>{\n    setLoading(true);\n    setItems([]);\n    setError(false);\n    let response;\n  try{ \n   response =  await getSearchResults(query);\n    if(response?.data?.data.length > 0){ \n      setHasMore(true);\n      setItems(response?.data?.data);\n      setNextToken(response?.data?.meta?.next_token)\n    }else{\n      setError(true)\n    }\n    setLoading(false);\n  }catch(e){\n    setError(true)\n    setHasMore(false);\n    setLoading(false);\n  }\n}\n\nconst addItems = async()=>{\n  setLoading(true);\n  try{ \n    const response =  await getSearchResults(query, nextToken);\n    const newItems = response?.data?.data;\n    if(response?.data?.data?.length > 0){ \n      setHasMore(true);\n      let updateItems = [...items];\n      updateItems = updateItems?.concat(newItems)\n      setItems(updateItems);\n      setNextToken(response?.data?.meta?.next_token)\n    }else{\n      setHasMore(false);\n    }\n    setLoading(false);\n  }catch(e){\n    setHasMore(false);\n    setLoading(false);\n    console.log('error in search api',e);\n  }\n}\n\nconst toChangeTab =(index)=>{\n    setSelectedTabIndex(index);\n}\n\nconst getFavouriteItems =()=>{\n        try{  \n            const favItems = localStorage.get('favourite-tweets');\n            favItems && setFavourites(favItems);\n            setLoading(false);\n          }\n          catch(e){\n            setLoading(false);\n            setFavourites(null);\n            console.log('error fetching items from localhost',e)\n          }\n}\n\nuseEffect(()=>{\n    if(selectedTabIndex === 1){\n        setLoading(true);\n        setFavourites([]);\n        getFavouriteItems();\n    }\n},[selectedTabIndex])\n\nconst onTermChange =(term)=>{\n  setQuery(term);\n}\n\nconst tabItems = {display:['Search','Favourites']};\nconst comp = {\n  0 :  <>\n        <Search getItems={getItems} query={query} onTermChange={onTermChange}/>\n          <div className='card-container'>\n            { items?.length > 0 && items.map((item,id)=>(\n             (id+1 === items.length) ? \n             <div ref={lastItemInView} key={id}> \n              <Card data={item} type='tweets'/> \n             </div> :\n              <Card key={id} data={item} type='tweets'/>\n            ))} \n            { loading && <div className='center-loading'>loading...</div>}\n            { error && <div className='center'>No Results Found</div>}\n          </div>\n       </>,\n  1 :  <Favourite \n         toChangeTab={toChangeTab}\n         items={favourites}\n         loading={loading} \n         getFavouriteItems={getFavouriteItems}\n        />\n }\n\n   return(\n       <>\n       <div className='container'>\n           <div className='sub-container'>\n            <Tabs\n              items={tabItems}\n              selectedIndex={selectedTabIndex}\n              onTabChange={toChangeTab}\n            />\n            {comp?.[selectedTabIndex]}\n           </div>\n       </div>\n       </>\n   )\n}\n\nexport default Dashboard;","/Users/rishi.arya/Documents/planview-twitter/src/utils/storage.js",[],[],"/Users/rishi.arya/Documents/planview-twitter/src/sources/index.js",[],[],"/Users/rishi.arya/Documents/planview-twitter/src/components/favourite/index.js",[],[],["91","92"],"/Users/rishi.arya/Documents/planview-twitter/src/components/card/index.js",["93"],[],"import { useEffect, useState } from \"react\"\nimport { localStorage } from \"../../utils/storage\";\nimport ActionBar from \"./action-bar\";\nimport Detail from \"./details\";\nimport UserInfo from \"./user-info\";\n\nconst Card = ({data, type, getFavouriteItems}) =>{\n    const [isExpanded, setIsExpanded] = useState(false);\n    const [isFav, setIsFav] = useState(false);\n\n    const checkInitialIsFav = {\n        'tweets' : ()=>{\n            let favItems =localStorage.get('favourite-tweets');\n            if(favItems){\n            const itemIsFav = favItems?.some((item)=>{\n                if(item?.id === data?.id){\n                    return true;\n                }else{\n                return false;\n                }\n            }) \n            setTimeout(()=>{\n                setIsFav(itemIsFav);\n            },[100]) \n          }else{\n            setTimeout(()=>{\n                setIsFav(false);\n            },[100]) \n          }\n        },\n        'fav-tweets' : ()=>{\n            setIsFav(true);\n        }\n    }\n\n    useEffect(()=>{\n        const toSetInitalIsFav = checkInitialIsFav?.[type];\n        toSetInitalIsFav && toSetInitalIsFav();\n    },[])\n\n    const toggleExpand =()=>{\n        setIsExpanded(!isExpanded);\n    }\n\n    const toggleFav = (value)=>{\n        setIsFav(value)\n    }\n\n    return(\n     <>   \n     <div className='card-preview' key={data?.id}>\n       <UserInfo data={data}/>\n       <div className='desc'>{data?.text}</div> \n        <ActionBar\n         isExpanded={isExpanded}\n         toggleExpand={toggleExpand}\n         isFav={isFav}\n         getFavouriteItems={getFavouriteItems}\n         toggleFav={toggleFav}\n         type={type}\n         data={data}\n        /> \n         {isExpanded ? \n           <Detail \n             lang={data?.lang} \n             location={data.user?.location}\n             followersCount={data.user?.public_metrics?.followers_count}\n             tweetsCount={data.user?.public_metrics?.tweet_count}\n             followingCount={data.user?.public_metrics?.following_count}\n             retweetCount={data?.public_metrics?.retweet_count}\n             likeCount={data?.public_metrics?.like_count}\n           /> : ''}\n     </div>\n     </>\n    )\n}\n\nexport default Card;","/Users/rishi.arya/Documents/planview-twitter/src/components/search/index.js",[],[],"/Users/rishi.arya/Documents/planview-twitter/src/components/commons/tab/index.js",[],[],"/Users/rishi.arya/Documents/planview-twitter/src/api-base.js",[],[],"/Users/rishi.arya/Documents/planview-twitter/src/components/card/details.js",[],[],"/Users/rishi.arya/Documents/planview-twitter/src/components/card/action-bar.js",[],[],"/Users/rishi.arya/Documents/planview-twitter/src/components/card/user-info.js",["94"],[],"/Users/rishi.arya/Documents/planview-twitter/src/transform/index.js",[],[],"/Users/rishi.arya/Documents/planview-twitter/src/utils/number-formatter.js",[],[],"/Users/rishi.arya/Documents/planview-twitter/src/components/commons/like/index.js",[],[],{"ruleId":"95","severity":1,"message":"96","line":29,"column":3,"nodeType":"97","endLine":29,"endColumn":21,"suggestions":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"95","severity":1,"message":"103","line":39,"column":7,"nodeType":"97","endLine":39,"endColumn":9,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":14,"column":16,"nodeType":"107","messageId":"108","endLine":14,"endColumn":50},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'addItems'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"React Hook useEffect has missing dependencies: 'checkInitialIsFav' and 'type'. Either include them or remove the dependency array.",["112"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",{"desc":"113","fix":"114"},"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [loading, hasMore, addItems]",{"range":"117","text":"118"},"Update the dependencies array to be: [checkInitialIsFav, type]",{"range":"119","text":"120"},[991,1009],"[loading, hasMore, addItems]",[1144,1146],"[checkInitialIsFav, type]"]